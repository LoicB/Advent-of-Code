package aoc.loicb.y2024;

import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;

import java.util.List;
import java.util.stream.Stream;

import static org.junit.jupiter.api.Assertions.assertEquals;

class Day16Test {

    private final static List<String> SAMPLE_1 =
            List.of(
                    "###############",
                    "#.......#....E#",
                    "#.#.###.#.###.#",
                    "#.....#.#...#.#",
                    "#.###.#####.#.#",
                    "#.#.#.......#.#",
                    "#.#.#####.###.#",
                    "#...........#.#",
                    "###.#.#####.#.#",
                    "#...#.....#.#.#",
                    "#.#.#.###.#.#.#",
                    "#.....#...#.#.#",
                    "#.###.#.#.#.#.#",
                    "#S..#.....#...#",
                    "###############"
            );

    private final static List<String> SAMPLE_2 =
            List.of(
                    "#################",
                    "#...#...#...#..E#",
                    "#.#.#.#.#.#.#.#.#",
                    "#.#.#.#...#...#.#",
                    "#.#.#.#.###.#.#.#",
                    "#...#.#.#.....#.#",
                    "#.#.#.#.#.#####.#",
                    "#.#...#.#.#.....#",
                    "#.#.#####.#.###.#",
                    "#.#.#.......#...#",
                    "#.#.###.#####.###",
                    "#.#.#...#.....#.#",
                    "#.#.#.#####.###.#",
                    "#.#.#.........#.#",
                    "#.#.#.#########.#",
                    "#S#.............#",
                    "#################"
            );
    private final static List<String> SAMPLE_3 =
            List.of(
                    "#####",
                    "#..E#",
                    "#...#",
                    "#S..#",
                    "#####"
            );
    private final static List<String> SAMPLE_4 =
            List.of(
                    "###########################",
                    "#######################..E#",
                    "######################..#.#",
                    "#####################..##.#",
                    "####################..###.#",
                    "###################..##...#",
                    "##################..###.###",
                    "#################..####...#",
                    "################..#######.#",
                    "###############..##.......#",
                    "##############..###.#######",
                    "#############..####.......#",
                    "############..###########.#",
                    "###########..##...........#",
                    "##########..###.###########",
                    "#########..####...........#",
                    "########..###############.#",
                    "#######..##...............#",
                    "######..###.###############",
                    "#####..####...............#",
                    "####..###################.#",
                    "###..##...................#",
                    "##..###.###################",
                    "#..####...................#",
                    "#.#######################.#",
                    "#S........................#",
                    "###########################"
            );
    private final static List<String> SAMPLE_5 =
            List.of(
                    "####################################################",
                    "#......................................#..........E#",
                    "#......................................#...........#",
                    "#....................#.................#...........#",
                    "#....................#.................#...........#",
                    "#....................#.................#...........#",
                    "#....................#.................#...........#",
                    "#....................#.................#...........#",
                    "#....................#.................#...........#",
                    "#....................#.................#...........#",
                    "#....................#.................#...........#",
                    "#....................#.............................#",
                    "#S...................#.............................#",
                    "####################################################"
            );
    private final static List<String> SAMPLE_6 =
            List.of(
                    "########################################################",
                    "#.........#.........#.........#.........#.........#...E#",
                    "#.........#.........#.........#.........#.........#....#",
                    "#....#....#....#....#....#....#....#....#....#....#....#",
                    "#....#....#....#....#....#....#....#....#....#....#....#",
                    "#....#....#....#....#....#....#....#....#....#....#....#",
                    "#....#....#....#....#....#....#....#....#....#....#....#",
                    "#....#.........#.........#.........#.........#.........#",
                    "#S...#.........#.........#.........#.........#.........#",
                    "########################################################"
            );

    private static Stream<Arguments> partOneCaseProvider() {
        return Stream.of(
                Arguments.of(SAMPLE_1, 7036),
                Arguments.of(SAMPLE_2, 11048),
                Arguments.of(SAMPLE_3, 1004),
                Arguments.of(SAMPLE_4, 21148),
                Arguments.of(SAMPLE_5, 5078),
                Arguments.of(SAMPLE_6, 21110)
        );
    }

    private static Stream<Arguments> partTwoCaseProvider() {
        return Stream.of(
                Arguments.of(SAMPLE_1, 45),
                Arguments.of(SAMPLE_2, 64),
                Arguments.of(SAMPLE_3, 5),
                Arguments.of(SAMPLE_4, 149),
                Arguments.of(SAMPLE_5, 413),
                Arguments.of(SAMPLE_6, 264)
        );
    }

    @ParameterizedTest
    @MethodSource("partOneCaseProvider")
    void partOne(List<String> input, int expectedScore) {
        var day = new Day16();
        var score = day.partOne(input);
        assertEquals(expectedScore, score);
    }

    @ParameterizedTest
    @MethodSource("partTwoCaseProvider")
    void partTwo(List<String> input, int expectedNumberOfTiles) {
        var day = new Day16();
        var numberOfTiles = day.partTwo(input);
        assertEquals(expectedNumberOfTiles, numberOfTiles);
    }
}